/** ===============================================
 * Author: Epsilon DSVA Team
 * 
 * NOTE: This test and all associated code and data
 * are confidential and are not to be shared with 
 * anyone outside of the Epsilon DSVA team.
 * 
 * 
 * ! ! ! Do Not Edit This File ! ! !
 =================================================*/

const fs = require("fs");
const path = require("path");
const Chance = require("chance");

const chance = new Chance();

const PEOPLE_COUNT = 200;
const PURCHASE_COUNT = 1000;
const COLORS = {
  red: "#ef4444",
  amber: "#f59e0b",
  lime: "#84cc16",
  teal: "#14b8a6",
  sky: "#0ea5e9",
  indigo: "#6366f1",
  pink: "#ec4899",
  slate: "#64748b",
};
const ALL_SPORTS = [
  "Auto Racing",
  "Baseball",
  "Bicycling",
  "Bodybuilding",
  "Boxing",
  "Canoeing/Kayaking",
  "Cheerleading",
  "Climbing",
  "Cricket",
  "Figure Skating",
  "Fly Fishing",
  "Football",
  "Freshwater Fishing",
  "Golf",
  "Horse Racing",
  "Horses",
  "Inline Skating",
  "Martial Arts",
  "Mountain Biking",
  "NASCAR Racing",
  "Olympics",
  "Paintball",
  "Power & Motorcycles",
  "Pro Basketball",
  "Pro Ice Hockey",
  "Rodeo",
  "Rugby",
  "Running/Jogging",
  "Sailing",
  "Saltwater Fishing",
  "Scuba Diving",
  "Skateboarding",
  "Skiing",
  "Snowboarding",
  "Surfing/Body-Boarding",
  "Swimming",
  "Table Tennis/Ping-Pong",
  "Tennis",
  "Volleyball",
  "Walking",
  "Waterski/Wakeboard",
  "World Soccer",
];
const ALL_HOBBIES = [
  "Art/Technology",
  "Arts & Crafts",
  "Beadwork",
  "Bird-Watching",
  "Board Games/Puzzles",
  "Candle & Soap Making",
  "Card Games",
  "Chess",
  "Cigas",
  "Collecting",
  "Comic Books",
  "Drawing/Sketching",
  "Freelance Writing",
  "Genealogy",
  "Getting Published",
  "Guitar",
  "Home Recording",
  "Investors & Patents",
  "Jewelry Making",
  "Magic & Illusion",
  "Needlework",
  "Painting",
  "Photography",
  "Radio",
  "Roleplaying Games",
  "Sci-Fi & Fantasy",
  "Scrapbooking",
  "Screenwriting",
  "Stamps & Coins",
  "Video & Computer Games",
  "Woodworking",
];

const ALL_FOODS = [
  "American Cuisine",
  "Cajun Creole",
  "Chinese Cuisine",
  "Desserts Baking",
  "French Cuisine",
  "Italian Cuisine",
  "Japanese Cuisine",
  "Mexican Cuisine",
  "Vegan Vegetarian",
  "Fast Food",
  "Sweet Snacks",
  "Ready Meals",
  "Slow Food",
  "Salty Snacks",
  "Biscuit Cereals",
  "Gourmet",
  "Healthy Eating",
];

const SPORTS = chance.pickset(ALL_SPORTS, 12);
const HOBBIES = chance.pickset(ALL_HOBBIES, 10);
const FOODS = chance.pickset(ALL_FOODS, 8);

const COLOR_KEYS = Object.keys(COLORS);

const ANIMALS = {};

for (const category of ["pet", "farm", "ocean", "forest"]) {
  ANIMALS[category] = {};

  for (let i = 0; i < 5; i++) {
    const subcategory = chance.animal({ type: category }).toLowerCase();
    ANIMALS[category][subcategory] = +(100 + 500 * Math.random()).toFixed(2);
  }
}

const ANIMALS_FLAT = [].concat(
  ...Object.entries(ANIMALS).map(([category, subcats]) =>
    Object.entries(subcats).map(([subcategory, unit_price]) => ({
      category,
      subcategory,
      unit_price,
    }))
  )
);

const people = Array.from({ length: PEOPLE_COUNT }).map(() => {
  const color = chance.pickone(COLOR_KEYS);

  return {
    buyer_id: chance.guid(),

    age: chance.age(),
    favorite_color: color,
    favorite_color_code: COLORS[color],
    favorite_sport: chance.pickone(SPORTS),
    favorite_hobby: chance.pickone(HOBBIES),
    favorite_food: chance.pickone(FOODS),
  };
});

const purchases = Array.from({ length: PURCHASE_COUNT }).map(() => {
  const buyer = chance.pickone(people);
  const animal = chance.pickone(ANIMALS_FLAT);

  return {
    buyer_id: buyer.buyer_id,
    date: chance.date({ year: 2023, string: true }),
    location: chance.state({ full: true }),
    category: animal.category,
    subcategory: animal.subcategory,
    unit_price: animal.unit_price,
    item_count: Math.ceil(Math.random() * 5),
  };
});

fs.writeFileSync(
  path.join(__dirname, "people.json"),
  JSON.stringify(people, undefined, 2)
);

fs.writeFileSync(
  path.join(__dirname, "purchases.json"),
  JSON.stringify(purchases, undefined, 2)
);
